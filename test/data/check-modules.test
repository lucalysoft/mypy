-- Test cases for the type checker.

[case testAccessImportedDefinitions]
import m
m.f()           # E: Too few arguments for "f"
m.f(object())   # E: Argument 1 to "f" has incompatible type "object"
m.x = object()  # E: Incompatible types in assignment
m.f(m.A())
m.x = m.A()
[file m.py]
class A: pass
void f(A a): pass
A x

[case testAccessImportedDefinitions]
import m
m.f(object()) # E: Argument 1 to "f" has incompatible type "object"
m.f(m.A())
[file m.py]
class A: pass
void f(A a): pass

[case testAccessImportedDefinitions2]
from m import f, A
f(object()) # E: Argument 1 to "f" has incompatible type "object"
f(A())
[file m.py]
class A: pass
void f(A a): pass

[case testImportedExceptionType]
import m
try: 
    pass
except m.Err:
    pass
except m.Bad: # E: Invalid exception type
    pass
[file m.py]
class Err(BaseException): pass
class Bad: pass
[builtins fixtures/exception.py]

[case testImportedExceptionType2]
from m import Err, Bad
try: 
    pass
except Err:
    pass
except Bad: # E: Invalid exception type
    pass
[file m.py]
class Err(BaseException): pass
class Bad: pass
[builtins fixtures/exception.py]

[case testImportWithinBlock]
if None:
    import m
    m.a = m.b   # E: Incompatible types in assignment
    m.a = m.a
    m.f()
    m.f(m.a)    # E: Too many arguments for "f"
    m.a = m.A()
    m.a = m.B() # E: Incompatible types in assignment
[file m.py]
class A: pass
class B: pass
a = A()
b = B()
void f(): pass

[case testImportWithinFunction]
void f():
    from m import a, b, f, A, B
    a = b   # E: Incompatible types in assignment
    a = a
    f()
    f(a)    # E: Too many arguments for "f"
    a = A()
    a = B() # E: Incompatible types in assignment
[file m.py]
class A: pass
class B: pass
a = A()
b = B()
void f(): pass
[out]
main: In function "f":

[case testImportWithinMethod]
class C:
    void f(self):
        from m import *
        a = b   # E: Incompatible types in assignment
        a = a
        f()
        f(a)    # E: Too many arguments for "f"
        a = A()
        a = B() # E: Incompatible types in assignment
[file m.py]
class A: pass
class B: pass
a = A()
b = B()
void f(): pass
[out]
main: In member "f" of class "C":

[case testImportWithinClassBody]
class C:
    import m
    m.f()
    m.f(C) # E: Too many arguments for "f"
[file m.py]
void f(): pass
[out]
main: In class "C":

[case testImportWithinClassBody2]
class C:
    from m import f
    f()
    f(C) # E: Too many arguments for "f"
[file m.py]
void f(): pass
[out]
main: In class "C":
