-- Tests for unsupported features


[case testSetLiteral]
{None} # E: Feature not implemented yet (set literal)

[case testListComprehension]
a = [x for x in None]
[out]
main, line 1: Feature not implemented yet (list comprehension) 

[case testConditionalExpression]
a = None if None else None
[out]
main, line 1: Feature not implemented yet (conditional expression) 

[case testGeneratorExpression]
a = (x for x in None) # E: Feature not implemented yet (generator expression) 

[case testDecorator]
@f  # E: Feature not implemented yet (decorator)
def f(x): pass

[case testYield]
any f():
  yield None
[out]
main: In function "f":
main, line 2: Feature not implemented yet (yield statement)

[case testWith]
void f():
  with None:
    pass
[out]
main: In function "f":
main, line 2: Feature not implemented yet (with statement)

[case testKeywordArgsInCall]
f(x=None) # E: Feature not implemented yet (keyword arguments)
f(**None) # E: Feature not implemented yet (keyword arguments)
def f(x): pass

[case testKeywordArgsInFunc]
def f(**x): pass # E: Feature not implemented yet (keyword arguments)

[case testNonTopLevelImport]
def f():
    import x
if f:
    from y import a
class A:
    def f(self):
        from z import *
[out]
main: In function "f":
main, line 2: Imports within blocks not supported yet
main: At top level:
main, line 4: Imports within blocks not supported yet
main: In function "f":
main, line 7: Imports within blocks not supported yet

[case testNestedFunction]
def f():
    def g(): pass # Fail
class A:
    def f(self):
        def g(): pass # Fail
[out]
main: In function "f":
main, line 2: Nested functions not supported yet
main, line 5: Nested functions not supported yet

    