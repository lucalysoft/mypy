# TODO(MichalPokorny): more precise types

from typing import Any, Tuple

GLOBAL_SSL = ... # type: Any
GLOBAL_WIN32 = ... # type: Any
GLOBAL_ALL = ... # type: Any
GLOBAL_NOTHING = ... # type: Any
GLOBAL_DEFAULT = ... # type: Any

def global_init(option: Any) -> None: ...
def global_cleanup() -> None: ...

version = ... # type: str

def version_info() -> Tuple[int, str, int, str, int, str,
                            int, str, tuple, Any, int, Any]: ...

class Curl(object):
    def close(self) -> None: ...
    def setopt(self, option: Any, value: Any) -> None: ...
    def perform(self) -> None: ...
    def getinfo(self, info: Any) -> Any: ...
    def reset(self) -> None: ...
    def unsetopt(self, option: Any) -> Any: ...
    def pause(self, bitmask: Any) -> Any: ...
    def errstr(self) -> str: ...

class CurlMulti(object):
    def close(self) -> None: ...
    def add_handle(self, obj: Curl) -> None: ...
    def remove_handle(self, obj: Curl) -> None: ...
    def perform(self) -> Tuple[Any, int]: ...
    def fdset(self) -> tuple: ...
    def select(self, timeout: Any = None) -> Any: ...
    def info_read(self, max_objects: int) -> tuple: ...

class CurlShare(object):
    def close(self) -> None: ...
    def setopt(self, option: Any, value: Any) -> Any: ...
