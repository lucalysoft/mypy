# Stubs for _io (Python 3.4)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Undefined

DEFAULT_BUFFER_SIZE = Undefined(int)

def open(*args, **kwargs): pass

class BlockingIOError(OSError):
    def __init__(self, *args, **kwargs): pass

class BufferedRWPair(_BufferedIOBase):
    closed = Undefined(Any)
    def __init__(self, reader, writer, buffer_size=Undefined): pass
    def close(self, *args, **kwargs): pass
    def flush(self, *args, **kwargs): pass
    def isatty(self, *args, **kwargs): pass
    def peek(self, *args, **kwargs): pass
    def read(self, *args, **kwargs): pass
    def read1(self, *args, **kwargs): pass
    def readable(self): pass
    def readinto(self, b): pass
    def writable(self): pass
    def write(self, *args, **kwargs): pass
    def __getstate__(self): pass

class BufferedRandom(_BufferedIOBase):
    _finalizing = Undefined(Any)
    closed = Undefined(Any)
    mode = Undefined(Any)
    name = Undefined(Any)
    raw = Undefined(Any)
    def __init__(self, raw, buffer_size=Undefined): pass
    def _dealloc_warn(self, *args, **kwargs): pass
    def close(self, *args, **kwargs): pass
    def detach(self, *args, **kwargs): pass
    def fileno(self): pass
    def flush(self, *args, **kwargs): pass
    def isatty(self, *args, **kwargs): pass
    def peek(self, *args, **kwargs): pass
    def read(self, *args, **kwargs): pass
    def read1(self, *args, **kwargs): pass
    def readable(self): pass
    def readinto(self, b): pass
    def readline(self, *args, **kwargs): pass
    def seek(self, *args, **kwargs): pass
    def seekable(self): pass
    def tell(self): pass
    def truncate(self, *args, **kwargs): pass
    def writable(self): pass
    def write(self, *args, **kwargs): pass
    def __getstate__(self): pass
    def __next__(self): pass
    def __sizeof__(self): pass

class BufferedReader(_BufferedIOBase):
    _finalizing = Undefined(Any)
    closed = Undefined(Any)
    mode = Undefined(Any)
    name = Undefined(Any)
    raw = Undefined(Any)
    def __init__(self, raw, buffer_size=Undefined): pass
    def _dealloc_warn(self, *args, **kwargs): pass
    def close(self, *args, **kwargs): pass
    def detach(self, *args, **kwargs): pass
    def fileno(self): pass
    def flush(self, *args, **kwargs): pass
    def isatty(self, *args, **kwargs): pass
    def peek(self, *args, **kwargs): pass
    def read(self, *args, **kwargs): pass
    def read1(self, *args, **kwargs): pass
    def readable(self): pass
    def readinto(self, b): pass
    def readline(self, *args, **kwargs): pass
    def seek(self, *args, **kwargs): pass
    def seekable(self): pass
    def tell(self): pass
    def truncate(self, *args, **kwargs): pass
    def writable(self): pass
    def __getstate__(self): pass
    def __next__(self): pass
    def __sizeof__(self): pass

class BufferedWriter(_BufferedIOBase):
    _finalizing = Undefined(Any)
    closed = Undefined(Any)
    mode = Undefined(Any)
    name = Undefined(Any)
    raw = Undefined(Any)
    def __init__(self, raw, buffer_size=Undefined): pass
    def _dealloc_warn(self, *args, **kwargs): pass
    def close(self, *args, **kwargs): pass
    def detach(self, *args, **kwargs): pass
    def fileno(self): pass
    def flush(self, *args, **kwargs): pass
    def isatty(self, *args, **kwargs): pass
    def readable(self): pass
    def seek(self, *args, **kwargs): pass
    def seekable(self): pass
    def tell(self): pass
    def truncate(self, *args, **kwargs): pass
    def writable(self): pass
    def write(self, *args, **kwargs): pass
    def __getstate__(self): pass
    def __sizeof__(self): pass

class FileIO(_RawIOBase):
    _finalizing = Undefined(Any)
    closed = Undefined(Any)
    closefd = Undefined(Any)
    mode = Undefined(Any)
    def __init__(self, name, mode=Undefined, closefd=Undefined, opener=Undefined): pass
    def _dealloc_warn(self, *args, **kwargs): pass
    def close(self): pass
    def fileno(self): pass
    def isatty(self): pass
    def read(self, *args, **kwargs): pass
    def readable(self): pass
    def readall(self): pass
    def readinto(self): pass
    def seek(self, *args, **kwargs): pass
    def seekable(self): pass
    def tell(self): pass
    def truncate(self, *args, **kwargs): pass
    def writable(self): pass
    def write(self, *args, **kwargs): pass
    def __getstate__(self): pass

class IncrementalNewlineDecoder:
    newlines = Undefined(Any)
    def __init__(self, *args, **kwargs): pass
    def decode(self, *args, **kwargs): pass
    def getstate(self): pass
    def reset(self, *args, **kwargs): pass
    def setstate(self, state): pass

class UnsupportedOperation(ValueError, OSError): pass

class _BufferedIOBase(_IOBase):
    def detach(self, *args, **kwargs): pass
    def read(self, *args, **kwargs): pass
    def read1(self, *args, **kwargs): pass
    def readinto(self, b): pass
    def write(self, *args, **kwargs): pass

class _IOBase:
    closed = Undefined(Any)
    __dict__ = Undefined(Any)
    def __init__(self, *args, **kwargs): pass
    def _checkClosed(self, *args, **kwargs): pass
    def _checkReadable(self, *args, **kwargs): pass
    def _checkSeekable(self, *args, **kwargs): pass
    def _checkWritable(self, *args, **kwargs): pass
    def close(self, *args, **kwargs): pass
    def fileno(self): pass
    def flush(self, *args, **kwargs): pass
    def isatty(self, *args, **kwargs): pass
    def readable(self): pass
    def readline(self, *args, **kwargs): pass
    def readlines(self, *args, **kwargs): pass
    def seek(self, *args, **kwargs): pass
    def seekable(self): pass
    def tell(self): pass
    def truncate(self, *args, **kwargs): pass
    def writable(self): pass
    def writelines(self, *args, **kwargs): pass
    def __del__(self): pass
    def __enter__(self): pass
    def __exit__(self, exc_type, exc_val, exc_tb): pass
    def __iter__(self): pass
    def __next__(self): pass

class _RawIOBase(_IOBase):
    def read(self, *args, **kwargs): pass
    def readall(self): pass

class _TextIOBase(_IOBase):
    encoding = Undefined(Any)
    errors = Undefined(Any)
    newlines = Undefined(Any)
    def detach(self, *args, **kwargs): pass
    def read(self, *args, **kwargs): pass
    def readline(self, *args, **kwargs): pass
    def write(self, *args, **kwargs): pass
